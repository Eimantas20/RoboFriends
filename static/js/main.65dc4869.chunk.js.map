{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","card","name","email","id","className","alt","src","href","CardList","robots","map","user","i","Card","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","width","display","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reactDom","render","document","getElementById"],"mappings":"gOAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCUCQ,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OAEI,cADA,CACA,OAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,mBAAGM,KAAML,EAAT,SAAiBA,WCYlBM,G,MAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,qBAAKN,GAAG,OAAR,SAEQM,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAACC,EAAD,CAEIV,GAAIM,EAAOG,GAAGT,GACdF,KAAMQ,EAAOG,GAAGX,KAChBC,MAAOO,EAAOG,GAAGV,OAHZU,UCIlBE,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKX,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,MAAO,MAAOC,QAAS,gBAArG,SACKN,EAAMO,aC6CJC,E,kDAxCX,aAAe,IAAD,8BACV,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAZ1C,EAAKC,MAAQ,CACT1B,OAAQ,GACRuB,YAAa,IAJP,E,qDAOd,WAAqB,IAAD,OAChBI,MAAM,8CACL1C,MAAK,SAAA2C,GAAQ,OAAIA,EAASC,UAC1B5C,MAAK,SAAA6C,GAAW,EAAKR,SAAS,CAAEtB,OAAQ8B,S,oBAO7C,WAAU,IAAD,OACCC,EAAiBC,KAAKN,MAAM1B,OAAOiC,QAAO,SAAAjC,GAC5C,OAAOA,EAAOR,KAAK0C,cAAcC,SAAS,EAAKT,MAAMH,YAAYW,kBAErE,OAAiC,IAA7BF,KAAKN,MAAM1B,OAAOoC,OACX,yCAGH,sBAAKzC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWW,aAAc0B,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,OAAQ+B,MAEtB,iCACI,gH,GAjCNM,aCMlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAIjD3D,M","file":"static/js/main.65dc4869.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './card.css'\r\n// import React, {Fragment} from \"react\";\r\n\r\nconst card = ({ name, email, id }) => {\r\n    return (\r\n        // <div className='tc dib bg-light-green br3 pa3 ma2 grow bw2 shadow-5' style={{width: '300px', height: '400px'}} >\r\n        <div className='this'  >\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <a href={email}>{email}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default card;","import React from 'react';\r\nimport Card from './Card';\r\nimport './CardList.css'\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div id='doit'>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email} \r\n                        />\r\n                    );  \r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n\r\n// This is original way how we did it, minimized code using another prop and with map \r\n//             <Card id={robots[0].id} name={robots[0].name} email={robots[0].email} />\r\n//             <Card id={robots[1].id} name={robots[1].name} email={robots[1].email} />\r\n//             <Card id={robots[2].id} name={robots[2].name} email={robots[2].email} /> ","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='Search Robots'\r\n                onChange={searchChange} \r\n             />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '3px solid black', height: '800px', width: '70%', display: 'inline-block'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\n// import { robots } from './robots';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\n// import { robots } from './robots';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }    \r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => { this.setState({ robots: users })});\r\n        }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                    <footer>\r\n                        <p>Page created by Eimantas Kanaševičius using create-react-app</p>\r\n                    </footer>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n// import { robots } from '../components/robots';\nimport App from './App';\nimport reactDom from 'react-dom';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(`root`)\n// );\nreactDom.render(<App />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}